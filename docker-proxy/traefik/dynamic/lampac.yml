http:
  routers:
    lampac-preflight:
      rule: "Host(`${WEBDOMAIN}`) && Method(`OPTIONS`)"
      entryPoints:
        - websecure
      middlewares:
        - lampac-cors-response
      service: noop@internal
      priority: 100

    lampac-proxy:
      rule: "Host(`${WEBDOMAIN}`) && (PathPrefix(`/proxy/`) || PathPrefix(`/proxy-dash/`))"
      service: lampac-service
      entryPoints:
        - websecure
      tls:
        certResolver: le
      middlewares:
        - lampac-headers
        - lampac-buffering
        - lampac-cors-response   # CORS для реальных запросов
        - lampac-proxy-headers   # если нужны доп. request-заголовки
        - lampac-security
      priority: 90

    lampac-scripts:
      rule: "Host(`${WEBDOMAIN}`) && PathRegexp(`^/(.*)\\.js$`) && !PathRegexp(`^/.+/js/.+$`)"
      service: lampac-service
      entryPoints:
        - websecure
      tls:
        certResolver: le
      middlewares:
        - lampac-headers
        - lampac-scripts-cache   # длинный кэш для версионированных js
        - lampac-security
      priority: 80

    lampac-images:
      rule: "Host(`${WEBDOMAIN}`) && PathPrefix(`/proxyimg`)"
      service: lampac-service
      entryPoints:
        - websecure
      tls:
        certResolver: le
      middlewares:
        - lampac-headers
        - lampac-image-headers
        - lampac-security
      priority: 70

    lampac-websocket:
      rule: "Host(`${WEBDOMAIN}`) && PathPrefix(`/ws`)"
      service: lampac-service
      entryPoints:
        - websecure
      tls:
        certResolver: le
      middlewares:
        - lampac-headers
        - lampac-security
      priority: 60

    lampac-main:
      rule: "Host(`${WEBDOMAIN}`)"
      service: lampac-service
      entryPoints:
        - websecure
      tls:
        certResolver: le
      middlewares:
        - lampac-headers
        - lampac-security
      priority: 50

  services:
    lampac-service:
      loadBalancer:
        passHostHeader: true
        servers:
          - url: "http://lampac:9118"
        healthCheck:
          path: /ping
          interval: "10s"
          timeout: "3s"

  middlewares:
    lampac-headers:  
      headers:  
        # --- TLS / HSTS ---  
        sslRedirect: true  
        stsSeconds: 63072000  
        stsIncludeSubdomains: true  
        stsPreload: true  
  
        # --- MIME & XSS ---  
        contentTypeNosniff: true  
        browserXssFilter: true  
  
        # --- Clickjacking (более мягкая политика для Lampac) ---  
        frameDeny: false  
 
        # --- Referrer policy (совместимо с Lampac) ---  
        referrerPolicy: "no-referrer-when-downgrade"  
  
        # --- Отключаем встроенные CORS (полагаемся на Lampac) ---  
        # accessControlAllowOriginList: []  
        # accessControlAllowMethods: []  
        # accessControlAllowHeaders: []  
  
        customResponseHeaders:  
          X-Frame-Options: "SAMEORIGIN"
          # Безопасность  
          Cross-Origin-Opener-Policy: "same-origin"  
          Cross-Origin-Resource-Policy: "same-origin"  
          Permissions-Policy: "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"  
            
          # Убираем server header  
          server: ""  
            
          # Дополнительная защита  
          X-Content-Type-Options: "nosniff"  
          X-XSS-Protection: "1; mode=block"

    # Для старых/неверсионированных скриптов оставь no-cache, иначе используй это
    lampac-scripts-cache:
      headers:
        customResponseHeaders:
          Cache-Control: "no-store, must-revalidate, no-cache"

    lampac-cache-control:
      headers:
        customResponseHeaders:
          Cache-Control: "no-cache, no-store, must-revalidate"
          Pragma: "no-cache"
          Expires: "0"

    lampac-proxy-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: "https"
          X-Forwarded-Timeout: "30s"

    lampac-image-headers:
      headers:
        customResponseHeaders:
          Cache-Control: "no-store, must-revalidate, no-cache"

    lampac-cors-response:
      headers:
        customResponseHeaders:
          Access-Control-Allow-Origin: "*"  
          Access-Control-Allow-Methods: "GET, POST, PUT, PATCH, DELETE, OPTIONS"  
          Access-Control-Allow-Headers: "Accept, Origin, Content-Type, Authorization, X-Requested-With, X-Signalr-User-Agent, Cache-Control, DNT, If-Modified-Since, Keep-Alive, User-Agent, Token, Profile"
          Access-Control-Allow-Credentials: "true"
          Access-Control-Allow-Private-Network: "true"  
          Access-Control-Max-Age: "86400"
          

    lampac-security:  
      headers:  
        stsSeconds: 31536000  
        stsIncludeSubdomains: true  
        stsPreload: true  
        browserXssFilter: true  
        contentTypeNosniff: true  
        frameDeny: false  
        referrerPolicy: "no-referrer-when-downgrade"

    lampac-buffering:  
      buffering:  
        maxRequestBodyBytes: 0  # без ограничений  
        memRequestBodyBytes: 1048576  # 1MB в памяти  
        retryExpression: "IsNetworkError() && Attempts() < 3"  


# (необязательно) В static config Traefik:
# tls:
#   options:
#     modern:
#       minVersion: VersionTLS12
#       sniStrict: true
# и затем в каждом роутере:
#   tls:
#     options: modern@file
